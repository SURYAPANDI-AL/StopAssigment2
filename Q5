import java.util.Scanner;
import java.util.*;

public class PalindromeCount {
	
	public int longPalindromeCount(String input,int start,int end)
	{
		input=input.substring(start-1,end);
		Set<String> list=new LinkedHashSet();
		boolean [] check=new boolean [input.length()];
		permutation(input,list,check,"");
		int count=0,len=0;
		for(String i:list)
		{
			if(i.length()>len)
			{
				count=1;
				len=i.length();
			}
			else if(i.length()==len)
			{
				count++;
			}
		}
		return count;
	}
	
	public void permutation(String input,Set<String> list,boolean[]check ,String sp)
	{
		if(sp.length()<input.length())
		{
			if(checkPalindrome(sp))
			{
				list.add(sp);
			}
		}
		if(sp.length()==input.length())
		{
			if(checkPalindrome(sp))
			{
				list.add(sp);
			}
			return;
		}
		
		for(int i=0;i<input.length();i++)
		{
			if(!check[i])
			{
				check[i]=true;
				sp+=input.charAt(i);
				permutation(input,list,check,sp);
				sp=sp.substring(0,sp.length()-1);
				check[i]=false;
			}
		}
	}
	public boolean checkPalindrome(String input)
	{
		if(input.length()==1)
		{
			return false;
		}
		int i=0,j=input.length()-1;
		while(i<j)
		{
			if(input.charAt(i)!=input.charAt(j))
			{
				return false;
			}
			i++;j--;
		}
		return true;
	}

	
	public static void main(String[]args ) 
	{
		Scanner sc=new Scanner(System.in);
		String input=sc.next();
		int noOfTestCase=sc.nextInt();
		for(int i=0;i<noOfTestCase;i++)
		{
			int startPos=sc.nextInt();
			int endPos=sc.nextInt();
			PalindromeCount pc=new PalindromeCount();
			int count=pc.longPalindromeCount(input,startPos,endPos);
			System.out.print(count);
		}
	}
}
